import{e as t,b as e,v as a,h as s}from"./vue-lib.js?v=1714377894636";import{g as i}from"./index28.js?v=1714377894636";import{a as r}from"./database.table.js?v=1714377894636";import{e as o,i as l}from"./mysql.store.js?v=1714377894636";import{l as n,n as m}from"./main.js?v=1714377894636";import{d as p}from"./database.popup.js?v=1714377894636";import c from"./SetPwd.js?v=1714377894636";import{D as d}from"./index131.js?v=1714377894636";import"./__commonjsHelpers__.js?v=1714377894636";import"./index77.js?v=1714377894636";import"./element-lib.js?v=1714377894636";import"./public-lib.js?v=1714377894636";import"./index42.js?v=1714377894636";import"./preload-helper.js?v=1714377894636";import"./request-lib.js?v=1714377894636";import"./check.js?v=1714377894636";import"./locales-lib.js?v=1714377894636";import"./index38.js?v=1714377894636";import"./index45.js?v=1714377894636";import"./index39.js?v=1714377894636";import"./index.vue_vue_type_style_index_0_lang.js?v=1714377894636";import"./modulepreload-polyfill.js?v=1714377894636";import"./index85.js?v=1714377894636";import"./confirm.js?v=1714377894636";import"./config.js?v=1714377894636";import"./index52.js?v=1714377894636";import"./index53.js?v=1714377894636";import"./index57.js?v=1714377894636";import"./index54.js?v=1714377894636";import"./index56.js?v=1714377894636";import"./index43.js?v=1714377894636";import"./index58.js?v=1714377894636";import"./index59.js?v=1714377894636";import"./index60.js?v=1714377894636";const j=m(t({__name:"index",setup(t){const{refs:{tableParam:m}}=i(),j=e([]),b=e(!1),u=a({loading:!1,rowData:{},total:0}),h=a({list:[],limit:m.value.limit,num:0}),f=a({isRecurrence:!1,describe:{title:"",th:"",message:"",propsValue:"name"}}),v=e([{label:"同步数据库",value:"Synchronization",event:()=>{}},{label:"删除数据库",value:"delete",event:()=>{},isRefBatch:!0}]),x=t=>{n({title:"设置数据库"+t.name+"密码",area:53,component:c,compData:t,showFooter:!0})},y=async t=>{u.rowData=t;let e=[];e.push(t.id),p(e,"single")},_=async({id:t})=>{try{const{data:e}=await o({data:JSON.stringify({type:1,ids:JSON.stringify([t])})},"sqlserver");return e}catch(e){}},w=async t=>{let e=[];t.forEach((t=>{e.push(t.id)}));try{const t=await l({data:JSON.stringify({ids:JSON.stringify(e)})},"sqlserver");j.value=t.data}catch(a){}},g=r({editPasswordEvent:x,deleteDataEvent:y});return s((async()=>{})),{__sfc:!0,tableParam:m,rowList:j,isBatchVisible:b,tableList:u,tableSelect:h,batchConfig:f,tableBatchData:v,editPasswordEvent:x,deleteDataEvent:y,batchEvent:(t,e,a)=>{switch(t){case"Synchronization":return _(e);case"delete":return w(e)}return Promise.resolve()},batchSync:_,batchDelete:w,handleBatch:t=>{let e=[];switch(t){case"Synchronization":e=["同步"],f.describe.message="批量".concat(e[0],"已选的数据库，").concat(e[0],"过程中存在风险，请在闲置时间进行").concat(e[0],"，是否继续操作？"),f.isRecurrence=!0,f.describe.th="数据库",f.describe.title="批量".concat(e[0],"数据库"),b.value=!0;break;case"delete":w(h.list)}},tableColumn:g,DatabaseView:d}}}),(function(){var t=this._self._c,e=this._self._setupProxy;return t("div",{staticClass:"relative"},[t(e.DatabaseView,{attrs:{databaseType:"SqlServer",tableData:e.tableParam.databaseList,tableParam:e.tableParam,tableBatch:e.tableBatchData,tableColumn:e.tableColumn}})],1)}),[],!1,null,null,null,null).exports;export{j as default};
